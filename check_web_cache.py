#!/usr/bin/env python3
"""
Script para verificar se o cache est√° sendo usado na aplica√ß√£o web
Execute: python check_web_cache.py
"""

import os
import requests
import time
from dotenv import load_dotenv

# Carrega vari√°veis de ambiente
load_dotenv()

def test_web_cache():
    """Testa o cache da aplica√ß√£o web."""
    print("üåê Testando Cache da Aplica√ß√£o Web")
    print("=" * 50)
    
    # URL da aplica√ß√£o (ajuste conforme necess√°rio)
    base_url = "https://processador-relatorios-ia.onrender.com"
    
    print(f"üîó Testando aplica√ß√£o: {base_url}")
    
    # Teste 1: Verificar se a aplica√ß√£o est√° online
    try:
        response = requests.get(base_url, timeout=10)
        if response.status_code == 200 or response.status_code == 302:
            print("‚úÖ Aplica√ß√£o est√° online")
        else:
            print(f"‚ö†Ô∏è  Aplica√ß√£o retornou status: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå Erro ao acessar aplica√ß√£o: {e}")
        return
    
    # Teste 2: Verificar Redis diretamente
    print("\nüîç Verificando Redis...")
    try:
        import redis
        redis_url = os.getenv("REDIS_URL") or os.getenv("CACHE_REDIS_URL")
        
        if redis_url:
            r = redis.from_url(redis_url)
            info = r.info()
            total_commands = info.get('total_commands_processed', 0)
            print(f"üìä Total de comandos Redis: {total_commands}")
            
            # Conta chaves de cache
            keys = r.keys("*")
            cache_keys = [k for k in keys if b'cache' in k.lower() or b'gemini' in k.lower()]
            print(f"üîë Chaves de cache encontradas: {len(cache_keys)}")
            
            if cache_keys:
                print("‚úÖ Cache est√° sendo usado!")
                for key in cache_keys[:5]:  # Mostra as primeiras 5 chaves
                    print(f"  - {key.decode()[:50]}...")
            else:
                print("‚ö†Ô∏è  Nenhuma chave de cache encontrada")
        else:
            print("‚ùå Redis n√£o configurado")
            
    except Exception as e:
        print(f"‚ùå Erro ao verificar Redis: {e}")
    
    print("\n" + "=" * 50)
    print("üí° Como verificar manualmente:")
    print("1. Acesse a aplica√ß√£o web")
    print("2. Fa√ßa login e use o processador de relat√≥rios")
    print("3. Cole o mesmo texto duas vezes")
    print("4. Compare os tempos de resposta")
    print("5. Verifique os logs da aplica√ß√£o")
    print("6. Monitore o painel do Upstash")

if __name__ == "__main__":
    test_web_cache() 