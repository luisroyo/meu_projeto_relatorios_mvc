"""Final schema update after stamping

Revision ID: 8d3ce5809e5b
Revises: 6f22b151fd64
Create Date: 2025-06-22 12:44:45.955131

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8d3ce5809e5b'
down_revision = '6f22b151fd64'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('colaborador',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome_completo', sa.String(length=150), nullable=False),
    sa.Column('cargo', sa.String(length=100), nullable=False),
    sa.Column('matricula', sa.String(length=50), nullable=True),
    sa.Column('data_admissao', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=True),
    sa.Column('data_modificacao', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('colaborador', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_colaborador_cargo'), ['cargo'], unique=False)
        batch_op.create_index(batch_op.f('ix_colaborador_matricula'), ['matricula'], unique=True)
        batch_op.create_index(batch_op.f('ix_colaborador_nome_completo'), ['nome_completo'], unique=False)

    op.create_table('condominio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('condominio', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_condominio_nome'), ['nome'], unique=True)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_supervisor', sa.Boolean(), nullable=False),
    sa.Column('date_registered', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('escala_mensal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ano', sa.Integer(), nullable=False),
    sa.Column('mes', sa.Integer(), nullable=False),
    sa.Column('nome_turno', sa.String(length=50), nullable=False),
    sa.Column('supervisor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['supervisor_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ano', 'mes', 'nome_turno', name='_ano_mes_turno_uc')
    )
    with op.batch_alter_table('escala_mensal', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_escala_mensal_ano'), ['ano'], unique=False)
        batch_op.create_index(batch_op.f('ix_escala_mensal_mes'), ['mes'], unique=False)
        batch_op.create_index(batch_op.f('ix_escala_mensal_nome_turno'), ['nome_turno'], unique=False)
        batch_op.create_index(batch_op.f('ix_escala_mensal_supervisor_id'), ['supervisor_id'], unique=False)

    op.create_table('login_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('attempted_username', sa.String(length=120), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=256), nullable=True),
    sa.Column('failure_reason', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('login_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_login_history_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_login_history_user_id'), ['user_id'], unique=False)

    op.create_table('processing_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('processing_type', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('processing_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_processing_history_processing_type'), ['processing_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_processing_history_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_processing_history_user_id'), ['user_id'], unique=False)

    op.create_table('ronda',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data_hora_inicio', sa.DateTime(), nullable=False),
    sa.Column('data_hora_fim', sa.DateTime(), nullable=True),
    sa.Column('log_ronda_bruto', sa.Text(), nullable=False),
    sa.Column('relatorio_processado', sa.Text(), nullable=True),
    sa.Column('condominio_id', sa.Integer(), nullable=True),
    sa.Column('turno_ronda', sa.String(length=50), nullable=True),
    sa.Column('escala_plantao', sa.String(length=100), nullable=True),
    sa.Column('data_plantao_ronda', sa.Date(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_rondas_no_log', sa.Integer(), nullable=True),
    sa.Column('primeiro_evento_log_dt', sa.DateTime(), nullable=True),
    sa.Column('ultimo_evento_log_dt', sa.DateTime(), nullable=True),
    sa.Column('duracao_total_rondas_minutos', sa.Integer(), nullable=True),
    sa.Column('supervisor_id', sa.Integer(), nullable=True),
    sa.Column('is_incomplete', sa.Boolean(), nullable=False),
    sa.Column('is_duration_anomalous', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['condominio_id'], ['condominio.id'], ),
    sa.ForeignKeyConstraint(['supervisor_id'], ['user.id'], name='fk_ronda_supervisor_id'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_ronda_criador_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ronda', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ronda_condominio_id'), ['condominio_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_ronda_data_plantao_ronda'), ['data_plantao_ronda'], unique=False)
        batch_op.create_index(batch_op.f('ix_ronda_supervisor_id'), ['supervisor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_ronda_turno_ronda'), ['turno_ronda'], unique=False)
        batch_op.create_index(batch_op.f('ix_ronda_user_id'), ['user_id'], unique=False)

    op.create_table('ronda_segmento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ronda_id', sa.Integer(), nullable=False),
    sa.Column('inicio_dt', sa.DateTime(), nullable=True),
    sa.Column('termino_dt', sa.DateTime(), nullable=True),
    sa.Column('duracao_minutos', sa.Integer(), nullable=False),
    sa.Column('vtr', sa.String(length=50), nullable=True),
    sa.Column('is_incomplete_segment', sa.Boolean(), nullable=False),
    sa.Column('is_duration_anomalous_segment', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['ronda_id'], ['ronda.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ronda_segmento', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ronda_segmento_ronda_id'), ['ronda_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ronda_segmento', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ronda_segmento_ronda_id'))

    op.drop_table('ronda_segmento')
    with op.batch_alter_table('ronda', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ronda_user_id'))
        batch_op.drop_index(batch_op.f('ix_ronda_turno_ronda'))
        batch_op.drop_index(batch_op.f('ix_ronda_supervisor_id'))
        batch_op.drop_index(batch_op.f('ix_ronda_data_plantao_ronda'))
        batch_op.drop_index(batch_op.f('ix_ronda_condominio_id'))

    op.drop_table('ronda')
    with op.batch_alter_table('processing_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_processing_history_user_id'))
        batch_op.drop_index(batch_op.f('ix_processing_history_timestamp'))
        batch_op.drop_index(batch_op.f('ix_processing_history_processing_type'))

    op.drop_table('processing_history')
    with op.batch_alter_table('login_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_login_history_user_id'))
        batch_op.drop_index(batch_op.f('ix_login_history_timestamp'))

    op.drop_table('login_history')
    with op.batch_alter_table('escala_mensal', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_escala_mensal_supervisor_id'))
        batch_op.drop_index(batch_op.f('ix_escala_mensal_nome_turno'))
        batch_op.drop_index(batch_op.f('ix_escala_mensal_mes'))
        batch_op.drop_index(batch_op.f('ix_escala_mensal_ano'))

    op.drop_table('escala_mensal')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('condominio', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_condominio_nome'))

    op.drop_table('condominio')
    with op.batch_alter_table('colaborador', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_colaborador_nome_completo'))
        batch_op.drop_index(batch_op.f('ix_colaborador_matricula'))
        batch_op.drop_index(batch_op.f('ix_colaborador_cargo'))

    op.drop_table('colaborador')
    # ### end Alembic commands ###
